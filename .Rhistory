X <- trump_county_facts[,columns_of_interest]
Y <- as.data.frame(trump_county_facts[,2])
names(Y) <- c("fraction_votes")
# write.csv(X,file="interstX.csv",row.names=FALSE)
# write.csv(Y,file="Y.csv",row.names=FALSE)
Xtrain <- X[-test_inds,columns_of_interest]
Xtest <- X[test_inds,columns_of_interest]
maxs <- apply(Xtrain, 2, function(x) max(x, na.rm = TRUE))
mins <- apply(Xtrain, 2, function(x) min(x, na.rm = TRUE))
Xtrain <- apply(Xtrain,2,function(x){(x-min(x))/(max(x)-min(x))})
Xtest <- apply(Xtest,2,function(x){(x-min(x))/(max(x)-min(x))})
Ytrain <- Y[-test_inds,]
Ytest <- Y[test_inds,]
maxy = max(Ytrain)
miny = min(Ytrain)
Ytrain <- ((Ytrain - miny)/(maxy-miny))
Ytest <- ((Ytest - miny)/(maxy-miny))
dat <- as.data.frame(cbind(Ytrain,Xtrain))
names(dat)[1] <- c('D')
n <- names(dat)
f <- as.formula(paste("D ~", paste(n[!n %in% "D"], collapse = " + ")))
mod <- neuralnet(f, data = dat, hidden = 10, act.fct = "tanh", stepmax = 1e+07)
Yfit <- compute(mod, Xtrain)$net.result
comp <- cbind(Ytrain, Yfit)
Yfit2 <- compute(mod, Xtest)$net.result
comp2 <- cbind(Ytest, Yfit2)
sqrt(mean((comp[,1] - comp[,2])^2))
sqrt(mean((comp2[,1] - comp2[,2])^2))
sqrt(mean((Ytrain - mean(Ytrain))^2))
sqrt(mean((Ytest - mean(Ytest))^2))
columns_of_interest <- c("EDU685213", "INC110213", "RHI225214", "POP060210")
test_inds <- sample(1:171,30)
X <- trump_county_facts[,columns_of_interest]
Y <- as.data.frame(trump_county_facts[,2])
names(Y) <- c("fraction_votes")
# write.csv(X,file="interstX.csv",row.names=FALSE)
# write.csv(Y,file="Y.csv",row.names=FALSE)
Xtrain <- X[-test_inds,columns_of_interest]
Xtest <- X[test_inds,columns_of_interest]
maxs <- apply(Xtrain, 2, function(x) max(x, na.rm = TRUE))
mins <- apply(Xtrain, 2, function(x) min(x, na.rm = TRUE))
Xtrain <- apply(Xtrain,2,function(x){(x-min(x))/(max(x)-min(x))})
Xtest <- apply(Xtest,2,function(x){(x-min(x))/(max(x)-min(x))})
Ytrain <- Y[-test_inds,]
Ytest <- Y[test_inds,]
maxy = max(Ytrain)
miny = min(Ytrain)
Ytrain <- ((Ytrain - miny)/(maxy-miny))
Ytest <- ((Ytest - miny)/(maxy-miny))
dat <- as.data.frame(cbind(Ytrain,Xtrain))
names(dat)[1] <- c('D')
n <- names(dat)
f <- as.formula(paste("D ~", paste(n[!n %in% "D"], collapse = " + ")))
mod <- neuralnet(f, data = dat, hidden = 10, act.fct = "tanh", stepmax = 1e+07)
Yfit <- compute(mod, Xtrain)$net.result
comp <- cbind(Ytrain, Yfit)
Yfit2 <- compute(mod, Xtest)$net.result
comp2 <- cbind(Ytest, Yfit2)
sqrt(mean((comp[,1] - comp[,2])^2))
sqrt(mean((comp2[,1] - comp2[,2])^2))
sqrt(mean((Ytrain - mean(Ytrain))^2))
sqrt(mean((Ytest - mean(Ytest))^2))
columns_of_interest <- c("EDU685213", "INC110213", "RHI225214", "POP060210")
test_inds <- sample(1:171,30)
X <- trump_county_facts[,columns_of_interest]
Y <- as.data.frame(trump_county_facts[,2])
names(Y) <- c("fraction_votes")
# write.csv(X,file="interstX.csv",row.names=FALSE)
# write.csv(Y,file="Y.csv",row.names=FALSE)
Xtrain <- X[-test_inds,columns_of_interest]
Xtest <- X[test_inds,columns_of_interest]
maxs <- apply(Xtrain, 2, function(x) max(x, na.rm = TRUE))
mins <- apply(Xtrain, 2, function(x) min(x, na.rm = TRUE))
Xtrain <- apply(Xtrain,2,function(x){(x-min(x))/(max(x)-min(x))})
Xtest <- apply(Xtest,2,function(x){(x-min(x))/(max(x)-min(x))})
Ytrain <- Y[-test_inds,]
Ytest <- Y[test_inds,]
maxy = max(Ytrain)
miny = min(Ytrain)
Ytrain <- ((Ytrain - miny)/(maxy-miny))
Ytest <- ((Ytest - miny)/(maxy-miny))
dat <- as.data.frame(cbind(Ytrain,Xtrain))
names(dat)[1] <- c('D')
n <- names(dat)
f <- as.formula(paste("D ~", paste(n[!n %in% "D"], collapse = " + ")))
mod <- neuralnet(f, data = dat, hidden = 10, act.fct = "tanh", stepmax = 1e+07)
Yfit <- compute(mod, Xtrain)$net.result
comp <- cbind(Ytrain, Yfit)
Yfit2 <- compute(mod, Xtest)$net.result
comp2 <- cbind(Ytest, Yfit2)
sqrt(mean((comp[,1] - comp[,2])^2))
sqrt(mean((comp2[,1] - comp2[,2])^2))
sqrt(mean((Ytrain - mean(Ytrain))^2))
sqrt(mean((Ytest - mean(Ytest))^2))
columns_of_interest <- c("EDU685213", "INC110213", "RHI225214", "POP060210")
test_inds <- sample(1:171,30)
X <- trump_county_facts[,columns_of_interest]
Y <- as.data.frame(trump_county_facts[,2])
names(Y) <- c("fraction_votes")
# write.csv(X,file="interstX.csv",row.names=FALSE)
# write.csv(Y,file="Y.csv",row.names=FALSE)
Xtrain <- X[-test_inds,columns_of_interest]
Xtest <- X[test_inds,columns_of_interest]
maxs <- apply(Xtrain, 2, function(x) max(x, na.rm = TRUE))
mins <- apply(Xtrain, 2, function(x) min(x, na.rm = TRUE))
Xtrain <- apply(Xtrain,2,function(x){(x-min(x))/(max(x)-min(x))})
Xtest <- apply(Xtest,2,function(x){(x-min(x))/(max(x)-min(x))})
Ytrain <- Y[-test_inds,]
Ytest <- Y[test_inds,]
maxy = max(Ytrain)
miny = min(Ytrain)
Ytrain <- ((Ytrain - miny)/(maxy-miny))
Ytest <- ((Ytest - miny)/(maxy-miny))
dat <- as.data.frame(cbind(Ytrain,Xtrain))
names(dat)[1] <- c('D')
n <- names(dat)
f <- as.formula(paste("D ~", paste(n[!n %in% "D"], collapse = " + ")))
mod <- neuralnet(f, data = dat, hidden = 10, act.fct = "tanh", stepmax = 1e+07)
Yfit <- compute(mod, Xtrain)$net.result
comp <- cbind(Ytrain, Yfit)
Yfit2 <- compute(mod, Xtest)$net.result
comp2 <- cbind(Ytest, Yfit2)
sqrt(mean((comp[,1] - comp[,2])^2))
sqrt(mean((comp2[,1] - comp2[,2])^2))
sqrt(mean((Ytrain - mean(Ytrain))^2))
sqrt(mean((Ytest - mean(Ytest))^2))
Ytrain <- ((Ytrain - miny)/(maxy-miny))
Ytest <- ((Ytest - miny)/(maxy-miny))
max(Ytrain)
maxy = max(Ytrain)
miny = min(Ytrain)
maxy
test_inds <- sample(1:171,30)
X <- trump_county_facts[,columns_of_interest]
Y <- as.data.frame(trump_county_facts[,2])
names(Y) <- c("fraction_votes")
View(Y)
max(Y)
Xtrain <- X[-test_inds,columns_of_interest]
Xtest <- X[test_inds,columns_of_interest]
maxs <- apply(Xtrain, 2, function(x) max(x, na.rm = TRUE))
mins <- apply(Xtrain, 2, function(x) min(x, na.rm = TRUE))
Xtrain <- apply(Xtrain,2,function(x){(x-min(x))/(max(x)-min(x))})
Xtest <- apply(Xtest,2,function(x){(x-min(x))/(max(x)-min(x))})
View(Xtest)
View(Xtrain)
Ytrain <- Y[-test_inds]
View(Ytrain)
Ytest <- Y[test_inds]
Ytest <- Y[test_inds,]
View(Ytrain)
Ytrain <- Y[-test_inds,]
Ytest <- Y[test_inds,]
maxy = max(Ytrain)
miny = min(Ytrain)
Ytrain <- ((Ytrain - miny)/(maxy-miny))
Ytest <- ((Ytest - miny)/(maxy-miny))
min(Ytrain)
max(Ytrain)
max(Ytest)
min(Ytest)
dat <- as.data.frame(cbind(Ytrain,Xtrain))
names(dat)[1] <- c('D')
n <- names(dat)
f <- as.formula(paste("D ~", paste(n[!n %in% "D"], collapse = " + ")))
mod <- neuralnet(f, data = dat, hidden = 10, act.fct = "tanh", stepmax = 1e+07)
Yfit <- compute(mod, Xtrain)$net.result
comp <- cbind(Ytrain, Yfit)
Yfit2 <- compute(mod, Xtest)$net.result
comp2 <- cbind(Ytest, Yfit2)
sqrt(mean((comp[,1] - comp[,2])^2))
sqrt(mean((comp2[,1] - comp2[,2])^2))
sqrt(mean((Ytrain - mean(Ytrain))^2))
sqrt(mean((Ytest - mean(Ytest))^2))
mod <- neuralnet(f, data = dat, hidden = 10, act.fct = "tanh", stepmax = 1e+07, linear.output = FALSE)
Yfit <- compute(mod, Xtrain)$net.result
comp <- cbind(Ytrain, Yfit)
Yfit2 <- compute(mod, Xtest)$net.result
comp2 <- cbind(Ytest, Yfit2)
sqrt(mean((comp[,1] - comp[,2])^2))
sqrt(mean((comp2[,1] - comp2[,2])^2))
sqrt(mean((Ytrain - mean(Ytrain))^2))
sqrt(mean((Ytest - mean(Ytest))^2))
mod <- neuralnet(f, data = dat, hidden = 10, act.fct = "tanh", stepmax = 1e+07, linear.output = FALSE)
Yfit <- compute(mod, Xtrain)$net.result
comp <- cbind(Ytrain, Yfit)
Yfit2 <- compute(mod, Xtest)$net.result
comp2 <- cbind(Ytest, Yfit2)
sqrt(mean((comp[,1] - comp[,2])^2))
sqrt(mean((comp2[,1] - comp2[,2])^2))
sqrt(mean((Ytrain - mean(Ytrain))^2))
sqrt(mean((Ytest - mean(Ytest))^2))
mod <- neuralnet(f, data = dat, hidden = 20, act.fct = "tanh", stepmax = 1e+07, linear.output = FALSE)
Yfit <- compute(mod, Xtrain)$net.result
comp <- cbind(Ytrain, Yfit)
Yfit2 <- compute(mod, Xtest)$net.result
comp2 <- cbind(Ytest, Yfit2)
sqrt(mean((comp[,1] - comp[,2])^2))
sqrt(mean((comp2[,1] - comp2[,2])^2))
sqrt(mean((Ytrain - mean(Ytrain))^2))
sqrt(mean((Ytest - mean(Ytest))^2))
mod <- neuralnet(f, data = dat, hidden = 3, act.fct = "tanh", stepmax = 1e+07, linear.output = FALSE)
Yfit <- compute(mod, Xtrain)$net.result
comp <- cbind(Ytrain, Yfit)
Yfit2 <- compute(mod, Xtest)$net.result
comp2 <- cbind(Ytest, Yfit2)
sqrt(mean((comp[,1] - comp[,2])^2))
sqrt(mean((comp2[,1] - comp2[,2])^2))
sqrt(mean((Ytrain - mean(Ytrain))^2))
sqrt(mean((Ytest - mean(Ytest))^2))
mod <- neuralnet(f, data = dat, hidden = 3, act.fct = "tanh", stepmax = 1e+07, linear.output = FALSE)
Yfit <- compute(mod, Xtrain)$net.result
comp <- cbind(Ytrain, Yfit)
Yfit2 <- compute(mod, Xtest)$net.result
comp2 <- cbind(Ytest, Yfit2)
sqrt(mean((comp[,1] - comp[,2])^2))
sqrt(mean((comp2[,1] - comp2[,2])^2))
sqrt(mean((Ytrain - mean(Ytrain))^2))
sqrt(mean((Ytest - mean(Ytest))^2))
mod <- neuralnet(f, data = dat, hidden = 3, act.fct = "tanh", stepmax = 1e+07, linear.output = FALSE)
Yfit <- compute(mod, Xtrain)$net.result
comp <- cbind(Ytrain, Yfit)
Yfit2 <- compute(mod, Xtest)$net.result
comp2 <- cbind(Ytest, Yfit2)
sqrt(mean((comp[,1] - comp[,2])^2))
sqrt(mean((comp2[,1] - comp2[,2])^2))
sqrt(mean((Ytrain - mean(Ytrain))^2))
sqrt(mean((Ytest - mean(Ytest))^2))
mod <- neuralnet(f, data = dat, hidden = 3, act.fct = "tanh", stepmax = 1e+07, linear.output = FALSE)
Yfit <- compute(mod, Xtrain)$net.result
comp <- cbind(Ytrain, Yfit)
Yfit2 <- compute(mod, Xtest)$net.result
comp2 <- cbind(Ytest, Yfit2)
sqrt(mean((comp[,1] - comp[,2])^2))
sqrt(mean((comp2[,1] - comp2[,2])^2))
sqrt(mean((Ytrain - mean(Ytrain))^2))
sqrt(mean((Ytest - mean(Ytest))^2))
mod <- neuralnet(f, data = dat, hidden = 3, act.fct = "tanh", stepmax = 1e+07, linear.output = FALSE)
Yfit <- compute(mod, Xtrain)$net.result
comp <- cbind(Ytrain, Yfit)
Yfit2 <- compute(mod, Xtest)$net.result
comp2 <- cbind(Ytest, Yfit2)
sqrt(mean((comp[,1] - comp[,2])^2))
sqrt(mean((comp2[,1] - comp2[,2])^2))
sqrt(mean((Ytrain - mean(Ytrain))^2))
sqrt(mean((Ytest - mean(Ytest))^2))
mod <- neuralnet(f, data = dat, hidden = 3, act.fct = "tanh", stepmax = 1e+07, linear.output = FALSE)
Yfit <- compute(mod, Xtrain)$net.result
comp <- cbind(Ytrain, Yfit)
Yfit2 <- compute(mod, Xtest)$net.result
comp2 <- cbind(Ytest, Yfit2)
sqrt(mean((comp[,1] - comp[,2])^2))
sqrt(mean((comp2[,1] - comp2[,2])^2))
sqrt(mean((Ytrain - mean(Ytrain))^2))
sqrt(mean((Ytest - mean(Ytest))^2))
mod <- neuralnet(f, data = dat, hidden = 4, act.fct = "tanh", stepmax = 1e+07, linear.output = FALSE)
Yfit <- compute(mod, Xtrain)$net.result
comp <- cbind(Ytrain, Yfit)
Yfit2 <- compute(mod, Xtest)$net.result
comp2 <- cbind(Ytest, Yfit2)
sqrt(mean((comp[,1] - comp[,2])^2))
sqrt(mean((comp2[,1] - comp2[,2])^2))
sqrt(mean((Ytrain - mean(Ytrain))^2))
sqrt(mean((Ytest - mean(Ytest))^2))
mod <- neuralnet(f, data = dat, hidden = 4, act.fct = "tanh", stepmax = 1e+07, linear.output = FALSE)
Yfit <- compute(mod, Xtrain)$net.result
comp <- cbind(Ytrain, Yfit)
Yfit2 <- compute(mod, Xtest)$net.result
comp2 <- cbind(Ytest, Yfit2)
sqrt(mean((comp[,1] - comp[,2])^2))
sqrt(mean((comp2[,1] - comp2[,2])^2))
sqrt(mean((Ytrain - mean(Ytrain))^2))
sqrt(mean((Ytest - mean(Ytest))^2))
mod <- neuralnet(f, data = dat, hidden = 4, act.fct = "tanh", stepmax = 1e+07, linear.output = FALSE)
Yfit <- compute(mod, Xtrain)$net.result
comp <- cbind(Ytrain, Yfit)
Yfit2 <- compute(mod, Xtest)$net.result
comp2 <- cbind(Ytest, Yfit2)
sqrt(mean((comp[,1] - comp[,2])^2))
sqrt(mean((comp2[,1] - comp2[,2])^2))
sqrt(mean((Ytrain - mean(Ytrain))^2))
sqrt(mean((Ytest - mean(Ytest))^2))
mod <- neuralnet(f, data = dat, hidden = 4, act.fct = "tanh", stepmax = 1e+07, linear.output = FALSE)
Yfit <- compute(mod, Xtrain)$net.result
comp <- cbind(Ytrain, Yfit)
Yfit2 <- compute(mod, Xtest)$net.result
comp2 <- cbind(Ytest, Yfit2)
sqrt(mean((comp[,1] - comp[,2])^2))
sqrt(mean((comp2[,1] - comp2[,2])^2))
sqrt(mean((Ytrain - mean(Ytrain))^2))
sqrt(mean((Ytest - mean(Ytest))^2))
mod <- neuralnet(f, data = dat, hidden = 4, act.fct = "tanh", stepmax = 1e+07, linear.output = FALSE)
Yfit <- compute(mod, Xtrain)$net.result
comp <- cbind(Ytrain, Yfit)
Yfit2 <- compute(mod, Xtest)$net.result
comp2 <- cbind(Ytest, Yfit2)
sqrt(mean((comp[,1] - comp[,2])^2))
sqrt(mean((comp2[,1] - comp2[,2])^2))
sqrt(mean((Ytrain - mean(Ytrain))^2))
sqrt(mean((Ytest - mean(Ytest))^2))
mod <- neuralnet(f, data = dat, hidden = 4, act.fct = "tanh", stepmax = 1e+07, linear.output = FALSE)
Yfit <- compute(mod, Xtrain)$net.result
comp <- cbind(Ytrain, Yfit)
Yfit2 <- compute(mod, Xtest)$net.result
comp2 <- cbind(Ytest, Yfit2)
sqrt(mean((comp[,1] - comp[,2])^2))
sqrt(mean((comp2[,1] - comp2[,2])^2))
sqrt(mean((Ytrain - mean(Ytrain))^2))
sqrt(mean((Ytest - mean(Ytest))^2))
county_facts <- read.csv("2016_presidential_election/county_facts.csv")
primary_results <- read.csv("2016_presidential_election/primary_results.csv")
trump <- primary_results[primary_results$candidate == 'Donald Trump',]
trump2 <- as.data.frame(cbind(trump$fips,trump$fraction_votes))
names(trump2) <- c('fips','fraction_votes')
trump_county_facts <- merge(trump2, county_facts, by = 'fips', all.x = TRUE, all.y = FALSE)
trump_county_facts <- subset(trump_county_facts, select = -c(area_name,state_abbreviation))
# % over 65:"AGE775214", % black: "RHI225214",
# % hispanic: "RHI725214", % white: "RHI825214", % foreign born: "POP645213"
# % bachelors: "EDU685213", % veteran: "VET605213", median hh income: "INC110213",
# pop per sqm: "POP060210",
columns_of_interest <- c("EDU685213", "INC110213", "RHI225214", "POP060210")
test_inds <- sample(1:171,30)
X <- trump_county_facts[,columns_of_interest]
Y <- as.data.frame(trump_county_facts[,2])
names(Y) <- c("fraction_votes")
# write.csv(X,file="interstX.csv",row.names=FALSE)
# write.csv(Y,file="Y.csv",row.names=FALSE)
Xtrain <- X[-test_inds,columns_of_interest]
Xtest <- X[test_inds,columns_of_interest]
maxs <- apply(Xtrain, 2, function(x) max(x, na.rm = TRUE))
mins <- apply(Xtrain, 2, function(x) min(x, na.rm = TRUE))
Xtrain <- apply(Xtrain,2,function(x){(x-min(x))/(max(x)-min(x))})
Xtest <- apply(Xtest,2,function(x){(x-min(x))/(max(x)-min(x))})
Ytrain <- Y[-test_inds,]
Ytest <- Y[test_inds,]
maxy = max(Ytrain)
miny = min(Ytrain)
Ytrain <- ((Ytrain - miny)/(maxy-miny))
Ytest <- ((Ytest - miny)/(maxy-miny))
dat <- as.data.frame(cbind(Ytrain,Xtrain))
names(dat)[1] <- c('D')
n <- names(dat)
f <- as.formula(paste("D ~", paste(n[!n %in% "D"], collapse = " + ")))
mod <- neuralnet(f, data = dat, hidden = 4, act.fct = "tanh", stepmax = 1e+07, linear.output = FALSE)
Yfit <- compute(mod, Xtrain)$net.result
comp <- cbind(Ytrain, Yfit)
Yfit2 <- compute(mod, Xtest)$net.result
comp2 <- cbind(Ytest, Yfit2)
sqrt(mean((comp[,1] - comp[,2])^2))
sqrt(mean((comp2[,1] - comp2[,2])^2))
sqrt(mean((Ytrain - mean(Ytrain))^2))
sqrt(mean((Ytest - mean(Ytest))^2))
mod <- neuralnet(f, data = dat, hidden = 4, act.fct = "tanh", stepmax = 1e+07, linear.output = FALSE)
Yfit <- compute(mod, Xtrain)$net.result
comp <- cbind(Ytrain, Yfit)
Yfit2 <- compute(mod, Xtest)$net.result
comp2 <- cbind(Ytest, Yfit2)
sqrt(mean((comp[,1] - comp[,2])^2))
sqrt(mean((comp2[,1] - comp2[,2])^2))
sqrt(mean((Ytrain - mean(Ytrain))^2))
sqrt(mean((Ytest - mean(Ytest))^2))
mod <- neuralnet(f, data = dat, hidden = 4, act.fct = "tanh", stepmax = 1e+07, linear.output = FALSE)
Yfit <- compute(mod, Xtrain)$net.result
comp <- cbind(Ytrain, Yfit)
Yfit2 <- compute(mod, Xtest)$net.result
comp2 <- cbind(Ytest, Yfit2)
sqrt(mean((comp[,1] - comp[,2])^2))
sqrt(mean((comp2[,1] - comp2[,2])^2))
sqrt(mean((Ytrain - mean(Ytrain))^2))
sqrt(mean((Ytest - mean(Ytest))^2))
mod <- neuralnet(f, data = dat, hidden = 4, act.fct = "tanh", stepmax = 1e+07, linear.output = FALSE)
Yfit <- compute(mod, Xtrain)$net.result
comp <- cbind(Ytrain, Yfit)
Yfit2 <- compute(mod, Xtest)$net.result
comp2 <- cbind(Ytest, Yfit2)
sqrt(mean((comp[,1] - comp[,2])^2))
sqrt(mean((comp2[,1] - comp2[,2])^2))
sqrt(mean((Ytrain - mean(Ytrain))^2))
sqrt(mean((Ytest - mean(Ytest))^2))
mod <- neuralnet(f, data = dat, hidden = 4, act.fct = "tanh", stepmax = 1e+07, linear.output = FALSE)
Yfit <- compute(mod, Xtrain)$net.result
comp <- cbind(Ytrain, Yfit)
Yfit2 <- compute(mod, Xtest)$net.result
comp2 <- cbind(Ytest, Yfit2)
sqrt(mean((comp[,1] - comp[,2])^2))
sqrt(mean((comp2[,1] - comp2[,2])^2))
sqrt(mean((Ytrain - mean(Ytrain))^2))
sqrt(mean((Ytest - mean(Ytest))^2))
mod <- neuralnet(f, data = dat, hidden = 4, act.fct = "tanh", stepmax = 1e+07, linear.output = FALSE)
Yfit <- compute(mod, Xtrain)$net.result
comp <- cbind(Ytrain, Yfit)
Yfit2 <- compute(mod, Xtest)$net.result
comp2 <- cbind(Ytest, Yfit2)
sqrt(mean((comp[,1] - comp[,2])^2))
sqrt(mean((comp2[,1] - comp2[,2])^2))
sqrt(mean((Ytrain - mean(Ytrain))^2))
sqrt(mean((Ytest - mean(Ytest))^2))
mod <- neuralnet(f, data = dat, hidden = 4, act.fct = "tanh", stepmax = 1e+07, linear.output = FALSE)
Yfit <- compute(mod, Xtrain)$net.result
comp <- cbind(Ytrain, Yfit)
Yfit2 <- compute(mod, Xtest)$net.result
comp2 <- cbind(Ytest, Yfit2)
sqrt(mean((comp[,1] - comp[,2])^2))
sqrt(mean((comp2[,1] - comp2[,2])^2))
sqrt(mean((Ytrain - mean(Ytrain))^2))
sqrt(mean((Ytest - mean(Ytest))^2))
mod <- neuralnet(f, data = dat, hidden = 4, act.fct = "tanh", stepmax = 1e+07, linear.output = FALSE)
Yfit <- compute(mod, Xtrain)$net.result
comp <- cbind(Ytrain, Yfit)
Yfit2 <- compute(mod, Xtest)$net.result
comp2 <- cbind(Ytest, Yfit2)
sqrt(mean((comp[,1] - comp[,2])^2))
sqrt(mean((comp2[,1] - comp2[,2])^2))
sqrt(mean((Ytrain - mean(Ytrain))^2))
sqrt(mean((Ytest - mean(Ytest))^2))
test_inds <- sample(1:171,30)
X <- trump_county_facts[,columns_of_interest]
Y <- as.data.frame(trump_county_facts[,2])
names(Y) <- c("fraction_votes")
# write.csv(X,file="interstX.csv",row.names=FALSE)
# write.csv(Y,file="Y.csv",row.names=FALSE)
Xtrain <- X[-test_inds,columns_of_interest]
Xtest <- X[test_inds,columns_of_interest]
maxs <- apply(Xtrain, 2, function(x) max(x, na.rm = TRUE))
mins <- apply(Xtrain, 2, function(x) min(x, na.rm = TRUE))
Xtrain <- apply(Xtrain,2,function(x){(x-min(x))/(max(x)-min(x))})
Xtest <- apply(Xtest,2,function(x){(x-min(x))/(max(x)-min(x))})
Ytrain <- Y[-test_inds,]
Ytest <- Y[test_inds,]
maxy = max(Ytrain)
miny = min(Ytrain)
Ytrain <- ((Ytrain - miny)/(maxy-miny))
Ytest <- ((Ytest - miny)/(maxy-miny))
dat <- as.data.frame(cbind(Ytrain,Xtrain))
names(dat)[1] <- c('D')
n <- names(dat)
f <- as.formula(paste("D ~", paste(n[!n %in% "D"], collapse = " + ")))
mod <- neuralnet(f, data = dat, hidden = 4, act.fct = "tanh", stepmax = 1e+07, linear.output = FALSE)
Yfit <- compute(mod, Xtrain)$net.result
comp <- cbind(Ytrain, Yfit)
Yfit2 <- compute(mod, Xtest)$net.result
comp2 <- cbind(Ytest, Yfit2)
sqrt(mean((comp[,1] - comp[,2])^2))
sqrt(mean((comp2[,1] - comp2[,2])^2))
sqrt(mean((Ytrain - mean(Ytrain))^2))
sqrt(mean((Ytest - mean(Ytest))^2))
test_inds <- sample(1:171,30)
X <- trump_county_facts[,columns_of_interest]
Y <- as.data.frame(trump_county_facts[,2])
names(Y) <- c("fraction_votes")
# write.csv(X,file="interstX.csv",row.names=FALSE)
# write.csv(Y,file="Y.csv",row.names=FALSE)
Xtrain <- X[-test_inds,columns_of_interest]
Xtest <- X[test_inds,columns_of_interest]
maxs <- apply(Xtrain, 2, function(x) max(x, na.rm = TRUE))
mins <- apply(Xtrain, 2, function(x) min(x, na.rm = TRUE))
Xtrain <- apply(Xtrain,2,function(x){(x-min(x))/(max(x)-min(x))})
Xtest <- apply(Xtest,2,function(x){(x-min(x))/(max(x)-min(x))})
Ytrain <- Y[-test_inds,]
Ytest <- Y[test_inds,]
maxy = max(Ytrain)
miny = min(Ytrain)
Ytrain <- ((Ytrain - miny)/(maxy-miny))
Ytest <- ((Ytest - miny)/(maxy-miny))
dat <- as.data.frame(cbind(Ytrain,Xtrain))
names(dat)[1] <- c('D')
n <- names(dat)
f <- as.formula(paste("D ~", paste(n[!n %in% "D"], collapse = " + ")))
mod <- neuralnet(f, data = dat, hidden = 4, act.fct = "tanh", stepmax = 1e+07, linear.output = FALSE)
Yfit <- compute(mod, Xtrain)$net.result
comp <- cbind(Ytrain, Yfit)
Yfit2 <- compute(mod, Xtest)$net.result
comp2 <- cbind(Ytest, Yfit2)
sqrt(mean((comp[,1] - comp[,2])^2))
sqrt(mean((comp2[,1] - comp2[,2])^2))
sqrt(mean((Ytrain - mean(Ytrain))^2))
sqrt(mean((Ytest - mean(Ytest))^2))
detach("package:neuralnet", unload=TRUE)
require(neuralnet)
print('Here')
print('Training Data: %f' % (mse_train))
print('Training Data: ' , (mse_train))
mse_train <- sqrt(mean((Y_fit_train - Ytrain)^2))
Y_fit_train <- compute(mod, Xtrain)$net.result
Y_fit_test <- compute(mod, Xtest)$net.result
# MSE in scaled space
mse_train <- sqrt(mean((Y_fit_train - Ytrain)^2))
mse_test <- sqrt(mean((Y_fit_test - Ytest)^2))
print('Training Data: ' , (mse_train))
sprintf('Training MSE: %s' % (mse_train))
sprintf('Training MSE: %s', mse_train)
sprintf('Training MSE: %.4f', mse_train)
benchmark_train <- sqrt(mean((Ytrain - mean(Ytrain))^2))
benchmark_test <- sqrt(mean((Ytest - mean(Ytest))^2))
sprintf('Training MSE: %.4f', mse_train)
sprintf('... Training Benchmark: %.4f', benchmark_train)
sprintf('Training MSE: %.4f \n ... Training Benchmark: %.4f', c(mse_train, benchmark_train))
sprintf('Training MSE: %.4f \n ... Training Benchmark: %.4f', mse_train, benchmark_train)
sprintf("Training MSE: %.4f \n ... Training Benchmark: %.4f", mse_train, benchmark_train)
# predict the values using training and test set
Y_fit_train <- compute(mod, Xtrain)$net.result
Y_fit_test <- compute(mod, Xtest)$net.result
# MSE in scaled space
mse_train <- sqrt(mean((Y_fit_train - Ytrain)^2))
mse_test <- sqrt(mean((Y_fit_test - Ytest)^2))
# MSE of just choosing the mean (benchmark to beat)
benchmark_train <- sqrt(mean((Ytrain - mean(Ytrain))^2))
benchmark_test <- sqrt(mean((Ytest - mean(Ytest))^2))
sprintf("Training MSE: %.4f", mse_train)
sprintf('... Training Benchmark: %.4f', benchmark_train)
sprintf("Testing MSE: %.4f", mse_test)
sprintf('... Testing Benchmark: %.4f', benchmark_test)
